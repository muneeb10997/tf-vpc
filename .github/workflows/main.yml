name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Type "yes" to apply and destroy, or "no" to skip'
        required: true
        default: 'no'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::354918400547:role/Github-tf-role
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.3  

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file=configs/dev.tfvars

      # Manual approval for Apply
      - name: Wait for Apply approval
        id: apply-approval
        run: |
          echo "Do you want to proceed with Terraform Apply? Type 'yes' to proceed or 'no' to stop."
          read -p "Enter your choice: " approval
          if [ "$approval" == "yes" ]; then
            echo "Proceeding with Terraform Apply"
            echo "::set-output name=action::apply"
          else
            echo "Aborting Apply"
            exit 1  # This will stop the pipeline if "no" is entered
        shell: bash

      - name: Terraform Apply
        run: terraform apply -var-file=configs/dev.tfvars
        if: steps.apply-approval.outputs.action == 'apply'

      # Manual approval for Destroy after Apply is successful
      - name: Wait for Destroy approval
        id: destroy-approval
        run: |
          echo "Do you want to proceed with Terraform Destroy? Type 'yes' to destroy or 'no' to skip."
          read -p "Enter your choice: " destroy_approval
          if [ "$destroy_approval" == "yes" ]; then
            echo "Proceeding with Terraform Destroy"
            echo "::set-output name=action::destroy"
          else
            echo "Skipping Destroy"
            exit 0  # Skip the destroy process if "no" is entered
        shell: bash

      - name: Terraform Destroy
        run: terraform destroy -var-file=configs/dev.tfvars
        if: steps.destroy-approval.outputs.action == 'destroy'
